# Generated by Django 5.2.5 on 2025-08-24 21:18

from django.db import migrations, models
import django.db.models.deletion

def migrate_tipo_data(apps, schema_editor):
    CentroCosto = apps.get_model('centros_costo', 'CentroCosto')
    TipoCentroCosto = apps.get_model('centros_costo', 'TipoCentroCosto')

    tipo_map = {
        'DEPARTAMENTO': 'DEPTO',
        'SUCURSAL': 'SUCUR',
        'ACTIVIDAD': 'ACTIV',
        'PRODUCTO': 'PROD',
        'SERVICIO': 'SERV',
        'OTRO': 'OTRO',
    }

    for centro in CentroCosto.objects.all():
        codigo_tipo = tipo_map.get(centro.tipo)
        if codigo_tipo:
            try:
                tipo_nuevo_obj = TipoCentroCosto.objects.get(codigo=codigo_tipo, empresa=centro.empresa)
                centro.tipo_nuevo = tipo_nuevo_obj
                centro.save()
            except TipoCentroCosto.DoesNotExist:
                # En un caso real, se podría crear un TipoCentroCosto por defecto aquí
                # o registrar un error para revisión manual.
                print(f"ADVERTENCIA: No se encontró TipoCentroCosto con código '{codigo_tipo}' para la empresa {centro.empresa.nombre}. El centro de costo '{centro.codigo}' no fue migrado.")


class Migration(migrations.Migration):

    dependencies = [
        ('centros_costo', '0002_tipocentrocosto_centrocosto_tipo_nuevo'),
    ]

    operations = [
        migrations.RunPython(migrate_tipo_data),
        migrations.RemoveField(
            model_name='centrocosto',
            name='tipo',
        ),
        migrations.RenameField(
            model_name='centrocosto',
            old_name='tipo_nuevo',
            new_name='tipo',
        ),
    ]
